version: "3.8"

services:
  db:
    image: postgres:12.2-alpine
    container_name: "postgres_db"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
    volumes:
      - database_postgres:/var/lib/postgresql/data

  api:
    build: .
    container_name: "processor-rest-api"
    environment:
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "db"
      DB_PORT: "5432"
      SSL_MODE: "disable"
      PYTHONUNBUFFERED: "1"
    ports:
      - "8080:8080"
    depends_on:
       db:
        condition: service_healthy
    networks:
      - backend

volumes:
  database_postgres:

networks:
  backend:
    driver: bridge
